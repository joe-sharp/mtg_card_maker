#!/usr/bin/env ruby
# frozen_string_literal: true

require 'thor'
require 'fileutils'

class ReadmeCards < Thor
  desc 'regenerate', 'Regenerate the cards shown in the README'
  option :full_size, type: :boolean, default: false,
                     desc:    'Skip PNG conversion and only output SVG files'

  def regenerate
    puts '🪄 Regenerating README cards...'

    # Create tmp directory if it doesn't exist
    FileUtils.mkdir_p('tmp')

    puts 'Generating MTG Card Maker card...'
    system(
      'bin/mtg_card_maker generate_card ' \
      '--name="MTG Card Maker" ' \
      '--mana-cost=RRRRR ' \
      '--type-line="Ruby - SVG - Shell" ' \
      '--rules-text="⤵︎: Create a custom MTG card." ' \
      '--flavor-text="Raw, untamed power and fiery creation, a testament to the passionate and dynamic nature of Ruby." ' \
      '--power=7 ' \
      '--toughness=12 ' \
      '--border-color=silver ' \
      '--color=red ' \
      '--output=tmp/mtgcm_card.svg ' \
      '--art=mtgcm.jpg'
    )

    puts 'Generating Joe Sharp card...'
    rules_text =
      'When Joe Sharp enters the battlefield, create a 1/1 Code token with ' \
      '"This token can debug any program."\n\n' \
      'Whenever you cast a Red spell, draw a card.'
    system(
      'bin/mtg_card_maker generate_card ' \
      '--name="Joe Sharp" ' \
      '--mana-cost=2UR ' \
      '--type-line="Engineer - Fullstack" ' \
      "--rules-text='#{rules_text}' " \
      '--flavor-text="\"I write code everyday.\" - Joe Sharp" ' \
      '--power=3 ' \
      '--toughness=3 ' \
      '--border-color=gold ' \
      '--color=blue ' \
      '--output=tmp/joe-sharp_card.svg ' \
      '--art=joe.jpg'
    )

    puts 'Converting SVG files to PNG...'
    if options[:full_size]
      system('rsvg-convert tmp/mtgcm_card.svg -o images/mtgcm_card.png')
      system('rsvg-convert tmp/joe-sharp_card.svg -o images/joe-sharp_card.png')
    else
      system('rsvg-convert --keep-aspect-ratio --width=300 --dpi-x=300 --dpi-y=300 ' \
             'tmp/mtgcm_card.svg -o images/mtgcm_card.png')
      system('rsvg-convert --keep-aspect-ratio --width=300 --dpi-x=300 --dpi-y=300 ' \
             'tmp/joe-sharp_card.svg -o images/joe-sharp_card.png')
    end

    puts '✨ README cards regenerated successfully!'
    puts '📁 Generated files:'
    puts '  - tmp/mtgcm_card.svg'
    puts '  - tmp/joe-sharp_card.svg'

    return if options[:full_size]

    puts '  - images/mtgcm_card.png'
    puts '  - images/joe-sharp_card.png'
  end
end

ReadmeCards.start(ARGV)
