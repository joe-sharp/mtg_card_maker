name: Ruby

on:
  push:
    branches:
      - main

  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Ruby ${{ matrix.ruby }}
    strategy:
      matrix:
        ruby:
          - '3.2'
          - '3.3'
          - '3.4'

    env:
      BUNDLE_WITHOUT: 'development'
    steps:
      - uses: actions/checkout@v4
      - name: Make tmp/
        run: mkdir tmp/
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: RuboCop && RSpec
        env:
          COVERAGE: true
        run: bundle exec rake

  docs:
    runs-on: ubuntu-latest
    name: Generate Documentation
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true
      - name: Generate YARD Documentation
        run: bundle exec yard doc
      - name: Check for Documentation Changes
        id: check-changes
        run: |
          # Add docs directory to staging
          git add docs/

          # Check if there are any staged changes
          if git diff --staged --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No documentation changes to commit"
          else
            # Create a temporary file to store meaningful changes
            TEMP_DIFF=$(mktemp)

            # Get all staged changes and filter out timestamp-only changes
            git diff -U0 --staged > "$TEMP_DIFF"

            # Remove common timestamp patterns and compare
            # Filter out lines that contain only timestamp-related changes
            FILTERED_DIFF=$(mktemp)
            cat "$TEMP_DIFF" | grep -v -E "^(@@|---|\+\+\+|diff|index|[-+]  Generated)" > \
              "$FILTERED_DIFF" || true

            # Check if filtered diff has meaningful content
            if [ -s "$FILTERED_DIFF" ]; then
              echo "has_changes=true" >> $GITHUB_OUTPUT
              echo "Meaningful documentation changes detected"
            else
              echo "has_changes=false" >> $GITHUB_OUTPUT
              echo "No meaningful documentation changes to commit"
              # Unstage all changes since they're just timestamps
              git reset HEAD docs/
            fi

            # Clean up temp files
            rm -f "$TEMP_DIFF" "$FILTERED_DIFF"
          fi
      - name: Create Documentation PR
        if: steps.check-changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "docs: update YARD documentation"
          title: "docs: update YARD documentation"
          body: |
            ðŸ¤– Automated documentation update

            This PR updates the YARD documentation to reflect the latest code changes.
            Please review the changes.

            **Changes:**
            - Updated YARD documentation
            - Generated fresh HTML docs

            **Note:** This is an automated PR created by GitHub Actions.
          branch: docs/update-yard-documentation
          delete-branch: true
          base: main
